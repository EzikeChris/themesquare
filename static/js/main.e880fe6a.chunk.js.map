{"version":3,"sources":["components/card/Card.js","components/card/CardList.js","components/search/Search.js","components/scroll/Scroll.js","components/errorboundry/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","user","i","Search","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setstate","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,iDAAf,UACI,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACI,mCAAMF,KACN,4BAAIC,WCkBLK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAGf,OACI,8BAGEA,EAAOC,KAAI,SAACC,EAAMC,GACpB,OAAQ,cAAC,EAAD,CACJR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHFS,SCOZC,EAfA,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE1B,OACG,8BACK,uBAAOV,UAAU,kCACjBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCMPI,G,MAbA,SAACC,GACb,OAAS,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACPJ,EAAMK,aC6BIC,E,kDA/BX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAQnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAjBCQ,aCqEZC,E,kDAhEP,aAAe,IAAD,8BACd,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEvB,YAAasB,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJH,E,qDASlB,WAAqB,IAAD,OAChB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKP,SAAS,CAAC5B,OAAOmC,S,oBAQ1C,WAAU,IAAD,OAECC,EAAiBd,KAAKJ,MAAMlB,OAAOqC,QAAO,SAAArC,GAC5C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAErE,OAAiC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACX,yCAIP,sBAAK5C,UAAU,KAAf,UACI,2CACA,cAAC,EAAD,CAAQU,aAAcgB,KAAKI,iBAC3B,cAAC,EAAD,UACI,cAAC,EAAD,UACR,cAAC,EAAD,CAAU1B,OAAQoC,e,GApCZZ,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAQ,cAAC,EAAD,IACfC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e880fe6a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n    return(\n        <div className='bg-dark-blue dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img  alt='robots' src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>p{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\n\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({Robots}) => {\n\n\n    return (\n        <div>\n\n            {  \n          Robots.map((user, i) => {\n        return (<Card key={i} \n            id={Robots[i].id} \n            name={Robots[i].name} \n            email={Robots[i].email}\n            />\n            );\n          })\n    }\n </div>\n    );\n\n\n\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst Search = ({searchfield, searchChange}) => {\n\n    return(\n       <div>\n            <input className=\"pa3 ba b-green bg-lightest-blue\"\n            type='search' \n            placeholder='Search robots' \n            onChange={searchChange} />\n       </div>\n\n\n    );\n}\n\n\nexport default Search;","import React from 'react';\n\n\nconst Scroll = (props) => {\n   return ( <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n    {props.children}\n</div> \n); \n    \n};\n\n\n\n\n\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            hasError: false,\n        }\n    }\n\n\n    componentDidCatch(error,info) {\n        this.setstate({hasError:true})\n    }\n    \n    render () {\n        if (this.state.hasError) {\n            return <h1> ooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n    \n   \n\n\n\n}\n\n\n\n \n\n\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport  CardList from '../components/card/CardList'\nimport Search from '../components/search/Search';\nimport './App.css';\nimport Scroll from '../components/scroll/Scroll';\nimport ErrorBoundry from '../components/errorboundry/ErrorBoundry'\nclass App extends Component{\n        constructor() {\n        super()\n        this.state = {\n            Robots: [],\n            searchfield: ''\n\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => {this.setState({Robots:users})});\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    \n        \n    }\n    render() {\n           \n        const filteredRobots = this.state.Robots.filter(Robots =>{\n            return Robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n        })\n        if (this.state.Robots.length === 0) {\n            return <h1>loading</h1>\n\n        }else\n        return (\n            <div className='tc'>\n                <h1>ThemePark</h1>\n                <Search searchChange={this.onSearchChange} />\n                <Scroll> \n                    <ErrorBoundry> \n            <CardList Robots={filteredRobots}/>\n            </ErrorBoundry>\n            </Scroll>\n            </div>\n    \n        );\n    } \n \n\n\n\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport  { Robots } from '../src/components/robots/Robots';\n\nReactDOM.render( <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}